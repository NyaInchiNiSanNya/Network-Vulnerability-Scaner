using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Sockets;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace Services.PacketsAnalizator
{
    internal static class _80Http
    {

        internal static Dictionary<String,String> httpScanner(String hostname)
        {

            Dictionary<String, String> ScannerResult = new Dictionary<String, String>();
            ScannerResult.Add("Service", "HTTP");
            ScannerResult.Add("Version",GetServerVersion(hostname));
            return ScannerResult;
        }

        internal static String GetServerVersion(String hostname)
        {
            Int32 port = 80;
            TcpClient client = new TcpClient(hostname, port);
            Stream stream = client.GetStream();
            StreamWriter writer = new StreamWriter(stream);
            StreamReader reader = new StreamReader(stream);
            // Отправляем GET-запрос на сервер
            writer.WriteLine("GET / HTTP/1.1");
            writer.WriteLine("Host: " + hostname);
            writer.WriteLine("Connection: close");
            writer.WriteLine("");
            writer.Flush();
            // Читаем ответ от сервера
            String response = "";
            String line;
            while ((line = reader.ReadLine()) != null)
            {
                response += line + "\n";
            }
            // Закрываем соединение
            client.Close();
            //Анализируем пакет и получаем версию сервера
            Regex regex = new Regex(@"Server:\s*(.+)", RegexOptions.IgnoreCase);
            MatchCollection matches = regex.Matches(response);
            if (matches.Count > 0)
            {
                String Server = String.Empty;
                foreach (Match match in matches)
                {
                    Server = match.Value.Substring(8); ;
                }
                return Server;
            }
            return null;
        }

    }
}
